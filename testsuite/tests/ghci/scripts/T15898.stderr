
<interactive>:3:14: error:
    • Expected a type, but ‘'()’ has kind ‘()’
    • In an expression type signature: '()
      In the expression: undefined :: '()
      In an equation for ‘it’: it = undefined :: '()

<interactive>:4:14: error:
    • Expected kind ‘* -> *’, but ‘Proxy '()’ has kind ‘*’
    • In an expression type signature: Proxy '() Int
      In the expression: undefined :: Proxy '() Int
      In an equation for ‘it’: it = undefined :: Proxy '() Int

<interactive>:5:14: error:
    • Expected a type, but ‘[(), ()]’ has kind ‘[*]’
    • In an expression type signature: [(), ()]
      In the expression: undefined :: [(), ()]
      In an equation for ‘it’: it = undefined :: [(), ()]

<interactive>:6:14: error:
    • Expected a type, but ‘'( '[], '[])’ has kind ‘([k0], [k1])’
    • In an expression type signature: '( '[], '[])
      In the expression: undefined :: '( '[], '[])
      In an equation for ‘it’: it = undefined :: '( '[], '[])
